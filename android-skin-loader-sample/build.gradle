plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "cn.feng.skin.demo"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled true
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':android-skin-loader-lib')
    implementation 'com.blankj:utilcodex:1.30.6'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.core:core-ktx:1.2.0"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1'
    implementation 'com.google.android.material:material:1.4.0'
}

final def TARGET_SKIN_DIR = '../skin-package/'
final def SAMPLE_NAME = 'Sample.apk'

gradle.projectsEvaluated {
    assembleRelease.doLast {
        println("=====================assembleRelease.doLast.begin.=========================")

        def dir = new File(TARGET_SKIN_DIR)
        if (!dir.exists()) {
            dir.mkdirs()
        }

        def f = new File(TARGET_SKIN_DIR + SAMPLE_NAME)
        if (f.exists()) {
            f.delete()
        }

        copy {
            from('build/outputs/apk')
            into(TARGET_SKIN_DIR)
            include '*.apk'
            exclude '**/*-unaligned.apk'
            rename('android-skin-loader-sample-release.apk', SAMPLE_NAME)
        }

        println("=====================assembleRelease.doLast success.=========================")
    }

    assembleDebug.doLast {
        println("=====================assembleDebug.doLast.begin.=========================")

        def dir = new File(TARGET_SKIN_DIR)
        if (!dir.exists()) {
            dir.mkdirs()
        }

        def f = new File(TARGET_SKIN_DIR + SAMPLE_NAME)
        if (f.exists()) {
            f.delete()
        }

        copy {
            from('build/outputs/apk')
            into(TARGET_SKIN_DIR)
            include '*.apk'
            exclude '**/*-unaligned.apk'
            rename('android-skin-loader-sample-debug.apk', SAMPLE_NAME)
        }

        println("=====================assembleDebug.doLast success.=========================")
    }
}